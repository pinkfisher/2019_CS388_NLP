basic

====================
0m 36s (- 60m 12s) (1 1%) 549.3145
1m 12s (- 59m 25s) (2 2%) 508.5930
1m 50s (- 59m 41s) (3 3%) 510.8760
2m 29s (- 59m 55s) (4 4%) 498.1775
3m 12s (- 60m 59s) (5 5%) 458.7260
3m 56s (- 61m 52s) (6 6%) 427.6516
4m 39s (- 61m 59s) (7 7%) 445.1474
5m 23s (- 62m 3s) (8 8%) 426.5208
6m 8s (- 62m 2s) (9 9%) 423.8847
6m 53s (- 62m 4s) (10 10%) 400.3069
7m 40s (- 62m 7s) (11 11%) 405.3806
8m 25s (- 61m 43s) (12 12%) 355.2611
9m 12s (- 61m 34s) (13 13%) 364.5815
9m 56s (- 61m 4s) (14 14%) 357.6959
10m 42s (- 60m 42s) (15 15%) 354.0269
11m 29s (- 60m 22s) (16 16%) 323.2598
12m 16s (- 59m 53s) (17 17%) 353.6942
13m 5s (- 59m 36s) (18 18%) 343.6738
13m 54s (- 59m 16s) (19 19%) 345.5282
14m 43s (- 58m 53s) (20 20%) 352.5860
15m 32s (- 58m 28s) (21 21%) 328.0894
16m 19s (- 57m 53s) (22 22%) 323.4406
17m 6s (- 57m 15s) (23 23%) 338.5548
17m 51s (- 56m 33s) (24 24%) 282.0338
18m 37s (- 55m 53s) (25 25%) 284.9745
19m 26s (- 55m 19s) (26 26%) 274.8571
20m 15s (- 54m 45s) (27 27%) 294.6416
21m 4s (- 54m 11s) (28 28%) 301.0217
21m 54s (- 53m 38s) (29 28%) 269.7245
22m 47s (- 53m 10s) (30 30%) 270.2089
23m 35s (- 52m 29s) (31 31%) 283.8047
24m 23s (- 51m 50s) (32 32%) 273.3621
25m 10s (- 51m 7s) (33 33%) 279.0521
26m 0s (- 50m 28s) (34 34%) 299.8430
26m 50s (- 49m 50s) (35 35%) 278.6375
27m 43s (- 49m 17s) (36 36%) 272.8663
28m 36s (- 48m 42s) (37 37%) 281.0672
29m 31s (- 48m 10s) (38 38%) 260.1126
30m 25s (- 47m 34s) (39 39%) 287.7398
31m 17s (- 46m 55s) (40 40%) 268.7158
32m 12s (- 46m 20s) (41 41%) 263.9791
33m 2s (- 45m 38s) (42 42%) 266.9035
33m 58s (- 45m 2s) (43 43%) 264.0937
34m 54s (- 44m 26s) (44 44%) 255.1452
35m 51s (- 43m 49s) (45 45%) 268.1096
36m 50s (- 43m 14s) (46 46%) 241.0315
37m 48s (- 42m 37s) (47 47%) 247.8811
38m 44s (- 41m 58s) (48 48%) 237.5329
39m 40s (- 41m 17s) (49 49%) 241.3744
40m 39s (- 40m 39s) (50 50%) 240.2675
41m 36s (- 39m 58s) (51 51%) 258.3596
42m 33s (- 39m 16s) (52 52%) 250.6099
43m 33s (- 38m 37s) (53 53%) 257.2544
44m 31s (- 37m 56s) (54 54%) 254.7552
45m 29s (- 37m 12s) (55 55%) 287.5852
46m 25s (- 36m 28s) (56 56%) 260.7330
47m 24s (- 35m 45s) (57 56%) 229.5870
48m 21s (- 35m 0s) (58 57%) 244.2015
49m 12s (- 34m 11s) (59 59%) 252.9260
50m 8s (- 33m 25s) (60 60%) 239.5524
51m 1s (- 32m 37s) (61 61%) 239.8510
51m 54s (- 31m 48s) (62 62%) 241.2891
52m 47s (- 31m 0s) (63 63%) 229.8342
53m 42s (- 30m 12s) (64 64%) 233.0839
54m 40s (- 29m 26s) (65 65%) 271.7581
55m 37s (- 28m 39s) (66 66%) 246.9532
56m 35s (- 27m 52s) (67 67%) 222.3638
57m 32s (- 27m 4s) (68 68%) 230.8759
58m 30s (- 26m 17s) (69 69%) 253.0503
59m 26s (- 25m 28s) (70 70%) 210.7996
60m 23s (- 24m 39s) (71 71%) 233.5539
61m 21s (- 23m 51s) (72 72%) 240.8614
62m 19s (- 23m 3s) (73 73%) 267.5679
63m 19s (- 22m 14s) (74 74%) 243.6180
64m 20s (- 21m 26s) (75 75%) 229.4911
65m 23s (- 20m 39s) (76 76%) 247.2481
66m 23s (- 19m 49s) (77 77%) 244.5646
67m 23s (- 19m 0s) (78 78%) 242.5272
68m 24s (- 18m 10s) (79 79%) 219.5460
69m 24s (- 17m 21s) (80 80%) 249.6131
70m 25s (- 16m 31s) (81 81%) 224.5894
71m 25s (- 15m 40s) (82 82%) 228.1404
72m 24s (- 14m 49s) (83 83%) 222.9946
73m 20s (- 13m 58s) (84 84%) 207.3958
74m 20s (- 13m 7s) (85 85%) 224.5694
75m 17s (- 12m 15s) (86 86%) 199.8613
76m 17s (- 11m 24s) (87 87%) 255.8958
77m 14s (- 10m 31s) (88 88%) 239.5915
78m 12s (- 9m 39s) (89 89%) 224.4815
79m 14s (- 8m 48s) (90 90%) 255.3486
80m 11s (- 7m 55s) (91 91%) 224.3740
81m 9s (- 7m 3s) (92 92%) 234.1481
82m 8s (- 6m 10s) (93 93%) 228.7455
83m 11s (- 5m 18s) (94 94%) 234.7026
84m 12s (- 4m 25s) (95 95%) 240.8650
85m 10s (- 3m 32s) (96 96%) 215.5874
86m 6s (- 2m 39s) (97 97%) 214.8541
87m 7s (- 1m 46s) (98 98%) 220.7748
88m 3s (- 0m 53s) (99 99%) 222.7236
88m 58s (- 0m 0s) (100 100%) 220.8368
=======TRAIN EVALUATION=======
Loading JAR files: evaluator.jar
gold: 0 syntax errors, 0 executor errors
predicted: 178 syntax errors, 77 executor errors
Example 49
  x      = "what are the populations of states through which the mississippi run ?"
  y_tok  = "['_answer', '(', 'NV', ',', '(', '_population', '(', 'NV', ',', 'V1', ')', ',', '_state', '(', 'V0', ')', ',', '_const', '(', 'NV', ',', '_riverid', '(', 'mississippi', ')', ')', ',', '_traverse', '(', 'V0', ',', 'V1', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_population', '(', 'NV', ',', 'V1', ')', ',', '_const', '(', 'V0', ',', '_riverid', '(', 'mississippi', ')', ')', ',', '_river', '(', 'V0', ')', ',', '_traverse', '(', 'V0', '<PAD>', ')', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>']"
Example 99
  x      = "what is the number of neighboring states for kentucky ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_count', '(', 'NV', ',', '(', '_state', '(', 'V0', ')', ',', '_next_to', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'kentucky', ')', ')', ')', ',', 'V2', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '_smallest', '(', 'V0', ',', '(', '_city', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'usa', ')', ')', ')', ')', ')']"
Example 149
  x      = "what is the highest elevation in new mexico ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_highest', '(', 'V0', ',', '(', '_place', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', "'", 'new', 'mexico', "'", ')', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '(', 'V0', ',', '(', '_city', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', "'", 'north', 'carolina', "'", ')', ')', ')', ')', ')']"
Example 199
  x      = "what are the biggest rivers in texas ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_longest', '(', 'V0', ',', '(', '_river', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'texas', ')', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '(', '_river', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'texas', ')', ')', ')', ')']"
Example 249
  x      = "what is the shortest river in iowa ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_shortest', '(', 'V0', ',', '(', '_river', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'iowa', ')', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '_shortest', '(', 'V0', ',', '(', '_river', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'california', ')', ')', ')', ')']"
Example 299
  x      = "how many major cities are in arizona ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_count', '(', 'NV', ',', '(', '_major', '(', 'V0', ')', ',', '_city', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'arizona', ')', ')', ')', ',', 'V2', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '_count', '(', 'NV', ',', '(', '_major', '(', 'V0', ')', ',', '_city', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'texas', ')', ')', ')', ',', 'V2', ')', ')']"
Example 349
  x      = "what is the size of florida ?"
  y_tok  = "['_answer', '(', 'NV', ',', '(', '_size', '(', 'NV', ',', 'V1', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'florida', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_size', '(', 'NV', ',', 'V1', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', "'", ')', ')', ')', ')']"
Example 399
  x      = "what rivers flow through missouri ?"
  y_tok  = "['_answer', '(', 'NV', ',', '(', '_river', '(', 'V0', ')', ',', '_traverse', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'missouri', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_river', '(', 'V0', ')', ',', '_traverse', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'usa', ')', ')', ')', ')']"
Example 449
  x      = "which states border alabama ?"
  y_tok  = "['_answer', '(', 'NV', ',', '(', '_state', '(', 'V0', ')', ',', '_next_to', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'alabama', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_state', '(', 'V0', ')', ',', '_next_to', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_cityid', '(', 'austin', ',', '_', ')', ')', ')', ')']"
Exact logical form matches: 20 / 480 = 0.042
Token-level accuracy: 10845 / 15498 = 0.700
Denotation matches: 33 / 480 = 0.069
=======DEV EVALUATION=======
Loading JAR files: evaluator.jar
gold: 0 syntax errors, 0 executor errors
predicted: 44 syntax errors, 22 executor errors
Example 49
  x      = "what is the city with the smallest population ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_smallest', '(', 'NV', ',', '(', '_city', '(', 'V1', ')', ',', '_population', '(', 'V1', ',', 'V0', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '(', '_state', '(', 'V0', ')', ',', '_next_to', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'california', ')', ')', ')', ')', ')']"
Example 99
  x      = "which states does not border texas ?"
  y_tok  = "['_answer', '(', 'NV', ',', '(', '_state', '(', 'V0', ')', ',', '\\+', '(', '_next_to', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'texas', ')', ')', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_state', '(', 'V0', ')', ',', '_next_to', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'texas', ')', ')', ')', ')', ')']"
Exact logical form matches: 7 / 120 = 0.058
Token-level accuracy: 2305 / 3908 = 0.590
Denotation matches: 9 / 120 = 0.075
=======FINAL EVALUATION ON BLIND TEST=======
Loading JAR files: evaluator.jar
gold: 0 syntax errors, 0 executor errors
predicted: 128 syntax errors, 43 executor errors
Example 49
  x      = "what state has the most major cities ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '_state', '(', 'V0', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '(', '_city', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'usa', ')', ')', ')', ')', ')']"
Example 99
  x      = "what are the major cities in the usa ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '_state', '(', 'V0', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_major', '(', 'V0', ')', ',', '_city', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_stateid', '(', 'texas', ')', ')', ')', ')', ')']"
Example 149
  x      = "which state has the lowest point that borders idaho ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '_state', '(', 'V0', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '(', 'V0', ',', '(', '_capital', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_const', '(', 'V0', ',', '_riverid', '(', 'mississippi', ')', ')', ',', '_river', '(', 'V0', ')', ',', '_traverse', '(', 'V0', ',', 'V1', ')', ')', ')']"
Example 199
  x      = "how long is the longest river in california ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '_state', '(', 'V0', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_len', '(', 'NV', ',', 'V1', ')', ',', '_const', '(', 'V0', ',', '_riverid', '(', ',', '_const', '(', 'V0', ',', '_riverid', '(', ',', '_const', '_', ')', ')', ')', ')', ')']"
Example 249
  x      = "what state bordering nevada has the largest population ?"
  y_tok  = "['_answer', '(', 'NV', ',', '_largest', '(', 'V0', ',', '_state', '(', 'V0', ')', ')', ')']"
  y_pred = "['_answer', '(', 'NV', ',', '(', '_capital', '(', 'V0', ')', ',', '_loc', '(', 'V0', ',', 'NV', ')', ',', '_largest', '(', 'V0', ',', ',', '_loc', '(', 'V0', ',', 'V1', ')', ')', ')']"
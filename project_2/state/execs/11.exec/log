main() {
  Execution directory: /Users/niyixuan/PycharmProjects/CS388_NLP/project_2_1/state/execs/11.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog
        698 statements
      } [1.6s, cum. 1.6s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/19/rw908y710gz8njcg2p8cl5s80000gn/T/tmp80lz2j83.dlog {
        Parsing /var/folders/19/rw908y710gz8njcg2p8cl5s80000gn/T/tmp80lz2j83.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("rhode island")))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(alabama)),state(B)))).
          _parse([query], answer(A,largest(B,(const(C,stateid(texas)),city(A),loc(A,C),population(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),lowest(B,place(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(const(B,cityid(sacramento,_)),capital(B),loc(B,A),state(A)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,ma))))).
          _parse([query], answer(A,fewest(A,B,(state(A),next_to(A,B),state(B),\+const(A,stateid(alaska)),\+const(A,stateid(hawaii)))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,riverid(colorado))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,count(B,(river(B),const(B,riverid(colorado))),A))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(massachusetts))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(state(A),largest(B,(state(A),area(A,B)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,(size(B,A),capital(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B))))).
          _parse([query], answer(A,count(B,(city(B),const(C,stateid(texas)),loc(B,C)),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("south carolina")))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,count(B,(city(B),const(B,cityid(austin,_)),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(size(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington))),A))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(montana))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maryland))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(colorado)),river(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(state(A),shortest(B,river(B)),traverse(B,A)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)),next_to(B,D),const(D,stateid("new mexico"))),A))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(tennessee))),A))).
          _parse([query], answer(A,sum(B,state(B),area(B),A))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(washington)))))).
          _parse([query], answer(A,largest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(iowa)),next_to(C,B)),A))).
          _parse([query], answer(A,(next_to(A,B),state(A),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(state(A),high_point(A,B),higher(B,C),high_point(D,C),const(D,stateid(colorado))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("scotts valley",_))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid("new york")))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(michigan)))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))).
          _parse([query], answer(A,(state(A),\+(loc(B,A),river(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(denver,_))))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))).
          _parse([query], answer(A,(len(B,A),shortest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,(density(B,A),smallest(B,state(B))))).
          _parse([query], answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(portland,me))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(missouri))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(houston,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),shortest(D,river(D)),traverse(D,B)),A))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,(lake(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,count(B,(city(B),const(C,countryid(usa)),loc(B,C)),A))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(atlanta,_))))).
          _parse([query], answer(A,sum(B,(state(B),next_to(C,B),const(C,stateid(texas))),population(B),A))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,(size(B,A),const(B,cityid("new york",_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(spokane,wa))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),largest(C,state(C))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maryland))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(oregon))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),major(C),river(C)),A))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(colorado))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),smallest(B,capital(B))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arkansas)))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(high_point(B,A),state(B),low_point(B,C),elevation(C,0.0)))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(area(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(river(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(state(A),longest(B,river(B)),traverse(B,A)))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,state(A))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(minnesota))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(missouri)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(kentucky))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(montana))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),longer(B,D),const(D,riverid(red))),A))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid("west virginia"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_))),A))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(springfield,mo))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boston,_))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(mountain(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid("new mexico"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid("des moines",_)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))).
          _parse([query], answer(A,(state(A),loc(B,A),shortest(B,river(B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),const(C,stateid(alabama)),next_to(C,B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wyoming))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(atlanta,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(oregon))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,shortest(A,river(A)))).
          _parse([query], answer(A,count(B,(river(B),\+(traverse(B,C),state(C),loc(D,C),capital(D),const(D,cityid(albany,_)))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,dc))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))).
          _parse([query], answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,largest(B,(capital(A),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(C),capital(C,A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),largest(C,(state(C),const(D,riverid(mississippi)),traverse(D,C)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,state(A))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,riverid(mississippi)),river(C)),A))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A),place(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(florida))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(salem,_))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande")),river(B)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),population(B,C))))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(arizona))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon))),A))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(state(A),city(B),const(B,cityid(denver,_)),loc(B,A)))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(area(B,A),state(B),loc(C,B),capital(C),const(C,cityid(albany,_))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,largest(B,(population(A,B),capital(A),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,largest(A,capital(A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(seattle,wa))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),largest(C,state(C))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(chicago,_))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),river(A),traverse(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))),A))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(alabama)))))).
          _parse([query], answer(A,shortest(A,river(A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),largest(C,state(C)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,largest(B,(state(A),const(C,riverid(mississippi)),traverse(C,A),population(A,B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(nevada))))).
          _parse([query], answer(A,(area(B,A),state(B)))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(illinois))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(louisiana))),A))).
          _parse([query], answer(A,(state(A),largest(B,(city(B),loc(B,C),const(C,stateid(montana)))),loc(B,A)))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)),A))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(idaho))))).
          _parse([query], answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),largest(C,state(C))),A))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,(state(A),const(B,cityid(kalamazoo,_)),loc(B,A)))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(utah))),A))).
          _parse([query], answer(A,largest(A,(state(A),traverse(B,A),const(B,riverid(mississippi)))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(austin,_))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida))),A))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C))))))).
          _parse([query], answer(A,(area(B,A),largest(B,state(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),lowest(B,place(B))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(oklahoma)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(delaware))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(capital(A),\+(major(A),city(A))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))).
          _parse([query], answer(A,(size(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(alaska))))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(georgia))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),state(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(montgomery,_))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi)))))).
          _parse([query], answer(A,(state(A),loc(B,A),major(B),city(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,longest(A,(river(A),\+(traverse(A,B),const(B,stateid(texas))))))).
          _parse([query], answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington,dc))))).
          _parse([query], answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),const(E,stateid(texas))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san diego",_))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),highest(C,(state(B),loc(C,B),place(C)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(mountain(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid("north dakota"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(washington))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))).
          _parse([query], answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C)),A))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(springfield,_))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(missouri)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid("des moines",_)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid("new mexico")))))).
          _parse([query], answer(A,(area(B,A),smallest(B,state(B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,largest(A,capital(A)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("baton rouge",_))))).
          _parse([query], answer(A,(density(B,A),smallest(C,(state(B),area(B,C)))))).
          _parse([query], answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(springfield,_))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,(density(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,smallest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D)))),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(B,state(B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),smallest(B,state(B)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),largest(D,(state(C),population(C,D)))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(washington))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("fort wayne",_))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(missouri)),river(B)))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,C),state(C),next_to(C,D),const(D,stateid(colorado))),A))).
          _parse([query], answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,cityid(austin,tx))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(utah))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(hawaii)))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(louisiana)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("san francisco",_))))).
          _parse([query], answer(A,smallest(A,(state(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(B,state(B))))).
          _parse([query], answer(A,(area(B,A),smallest(C,(state(B),density(B,C)))))).
          _parse([query], answer(A,count(B,(major(B),river(B),traverse(B,C),const(C,stateid(ohio))),A))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(louisiana))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("death valley"))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("guadalupe peak"))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(kansas))))).
          _parse([query], answer(A,(state(A),loc(B,A),capital(B),high_point(A,B)))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(pennsylvania))),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new york"))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D))))))).
          _parse([query], answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))).
          _parse([query], answer(A,(river(A),\+(traverse(A,B),const(B,stateid(tennessee)))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(state(A),traverse(B,A),largest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,longest(B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("north carolina"))))).
          _parse([query], answer(A,(loc(B,A),state(A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(wyoming))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(alabama))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),largest(B,state(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(ohio)))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),loc(A,C),const(C,countryid(usa)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(boston,_))),A))).
          _parse([query], answer(A,(density(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("south dakota"))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(arizona))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))).
          _parse([query], answer(A,(loc(B,A),const(B,placeid("mount whitney"))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,(,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,(,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,(((,,,(,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,((,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,((A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,(,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(,(B,,,,,,,,,,,,,,(,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(,(B(,,,,,,,,,,,,,,,(,,,,))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(AAAA,,,A,,,,,,,,,,,,,,,(,,,)()))))))))))))))))))))))).
          _parse([query], answer(A,((BC,,,,,((D,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(A(,,,,,,,,,,,,,,,,,,,,(,,,))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,(,,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((C,,,((,,,,,(,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(A,(A,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,(,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(A(,,,,,,,,,,,,,,,,,,,(,,,,,,,,,,,)()))))))))))))))))))).
          _parse([query], answer(A,(((B,,(((B,,,,(,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A,,,,,,,,,,,,,,,,,,)()))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,,(,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,,(,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(,((A,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,(,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,(,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,(((,,,,,,,,,,(,,,(,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((BC,,,,(((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(,(AA,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,(,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,(,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,(,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A,((A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,,((,,(,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((B,,,((,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,,,,,,,,,,,,)()))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((C,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(,(((,,,,,,,,,,,(,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,,((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A,,,(,,,,,,,,,,,,,,,)())))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,,((,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,)))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((,,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(A(A,,(,,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,(,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,,((,,,(,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B,((B,,,,,,,,,,,,,,,,(,,,)))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,(((,,((,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,(,((,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((B,,((,,,,,,,,,(,(,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(A(A,,,,,,,,,,,,,,,,,,,,,,,,,,,(,,,)())))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,(,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,(,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,(,((,,,,(,,,(,,())))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(,((,,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((,,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(A(,(A,,,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,(,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((,,((,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(A)(A)())))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(A(,,,,,(,,,,,,(,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,(,(((,,,,(,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(,(((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,,,,,(,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A,(AA,,A,,,,,,,,,(,,,)))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,,((,,,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(,(,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(A,(A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,(,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,,(,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,(,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,(,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((B,,,((,,,,,(,,,,(,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,,(((,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,(,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A(,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,(((,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A(,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,(,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(,(((B,,,(,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((C,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B,,((,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,(,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,(,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,,(((,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,(,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,((A,,,(,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,,,,(,,,,,(,,,,))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(A(,,,,(,,,,,,(,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,((A,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,(,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(A,((A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((,,,,,,,,,,,,(,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(B(B,,(,,,,,,,,,,,(,,,,,,,,,,,,(,,,,,,(,)())))))))))))).
          _parse([query], answer(A,(((B,,,,,(((,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,(((,,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,(,,,,,,,,,,,,,,,,,,(,,,,,)))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,(,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(,(A,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(,(,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,,,,,,,,,,,,,,,(,,,,))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((B,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,(,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,(,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,,(,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,(,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((,(,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((,,(,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,(,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,,,()))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((BC,,,,,((,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,(,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,(,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,(,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,(B(B,,(B,,,,,,,,,,,,,,))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,(,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,(,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,(,,,,,,,,(,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((B,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(A,,,(,,,,,,(,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B,,,((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(,(,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(((,(,(,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,((A,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((B,,(((,,,,(,,,,(,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,,,((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(,(B,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,(,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((A,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,(,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(,(A,,,,,,,,,,,,,,,,,,,,,,,,,,,(,,,))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,,,((,,,,,,,,,(,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((,,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,(,(((,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(,(,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A,((A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A,((A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(A(,(A,,,,,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,,,(,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,(,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((C,,,(,,,,,,(,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,((,,((,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(,(A,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(,((,,,(,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,(,((,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((C,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A,,(A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,((,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A((A,((A,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(B,,(B,,,,,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(A(A,,((,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(B,(BB,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,(,((,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,(,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,,((,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((B,,,((,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,(,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((B,,((,,,,,,,,(,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(,((,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,(,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,(,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(,(,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,(,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((C,,,((,,,,,,,,,(,,,,(,,()))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,(((,,,))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,,())))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,(AA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(,,,,(,,,(,,(,,,,(,,))))))))))))).
          _parse([query], answer(A,(((B,,,,((,,,(,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B,,,((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(,(,((,,,,,,,,,(,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,(((,,,((,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,(,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,(A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(B(B,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,)())))))).
          _parse([query], answer(A,(((B,(((,))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,(((,,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A(,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,(,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,(,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,(((,,(,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,(((,,,(,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(AA,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((B,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,,((,,,,,,,,,,,,,,,,,,,,(,,,,,,,,,(,,,(,,,)()))))))))))).
          _parse([query], answer(A,(((,(A(A(A,((A,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,(,(,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,,(,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(,(((,,,,,,,,,,,,,,(,(,,)))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,(,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,(,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,(,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,(,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,,(,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(B(B,,,(,,,,,,,,,,,,,,,,,,,,,,,,,,,)())))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A(,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(,(A,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(A(,(A,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(,(,((,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,,,((,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,(,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,(((,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((,,(,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((B,(B(B,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B,,((B,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(A,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,(,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(,((,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A,((A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,,(,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,((A,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,(((,,,))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,,((,,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,(,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,(,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((,,,((,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(,(,(B,,,,,,,,,,,))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,())))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(((C,,,(,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,,,((,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,(((,,,(,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,,,((,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((,,(,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A,(A,,,,,,,,,,,,,,,,,,,,(,,)()))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(,(((B,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,(,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(,(B(B,,(,,,,,,,,,,,,,,,,,,,,,,,,,,(,,,,,,,,,,,,,)())))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,((,,,,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,,,,,,)())))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((C,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(A,((A,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,((,,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,(,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(A,(AA,,,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,((A,,,,,,,,,,,,,,,,(,,,,)()))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,)))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,(,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,)))))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A(A(,(A,,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,)))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,(A(,,,,,,,,,,,,,,))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,,,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A)(A))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((A,(A(A(,(AA,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(((,))))))))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((A,,,(,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(A,(AA,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(((,(,((,,,,,,,,,,,,,,,,,,,,,,,))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,(((,(,(,,,,))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,,((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,,,,,,,,,,))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(A(A(,((A,,,,,,,,,,,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((,(,(((,,,(,,,,,,))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,,,,((,,(,,,))))))))))))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,((B,(B(B(B,,((B,,,,,,,,,,,,,,,)))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(((B,(,(((B,,,,,,,,,,,,,,,,,,,,,,,,,,,,)())))))))))))))))))))).
          _parse([query], answer(A,(((B,,,,(((,,,,,)))))))))))))))))))))))))))))))))))))))))))))).
          DatalogParser.loadSafe(): end
        } [1.8s, cum. 1.8s]
        960 statements
        Example tmp80lz2j83.dlog:0: query => {[clark fork:riverid/2],[little missouri:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[yellowstone:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(montana))))
        Example tmp80lz2j83.dlog:1: query => {[ohio:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmp80lz2j83.dlog:2: query => {[jerimoth hill:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('rhode island')))))
        Example tmp80lz2j83.dlog:3: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:4: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[michigan:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(ohio))))
        Example tmp80lz2j83.dlog:5: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid(colorado)))))
        Example tmp80lz2j83.dlog:6: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_))))
        Example tmp80lz2j83.dlog:7: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:8: query => {[republican:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(nebraska)))))
        Example tmp80lz2j83.dlog:9: query => {[4.09e+11length^2]} | answer(A,(size(B,A),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:10: query => {[10count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))
        Example tmp80lz2j83.dlog:11: query => {[colorado:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(california)))))
        Example tmp80lz2j83.dlog:12: query => {[montgomery_al:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(alabama)),state(B)))
        Example tmp80lz2j83.dlog:13: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(const(C,stateid(texas)),city(A),loc(A,C),population(A,B))))
        Example tmp80lz2j83.dlog:14: query => {[california:stateid/2]} | answer(A,(state(A),loc(B,A),lowest(B,place(B))))
        Example tmp80lz2j83.dlog:15: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmp80lz2j83.dlog:16: query => {[wabash:riverid/2],[ohio:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(ohio))))
        Example tmp80lz2j83.dlog:17: query => {[california:stateid/2]} | answer(A,(const(B,cityid(sacramento,_)),capital(B),loc(B,A),state(A)))
        Example tmp80lz2j83.dlog:18: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:19: query => {} | answer(A,(major(A),city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:20: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,ma))))
        Example tmp80lz2j83.dlog:21: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,fewest(A,B,(state(A),next_to(A,B),state(B),\+const(A,stateid(alaska)),\+const(A,stateid(hawaii)))))
        Example tmp80lz2j83.dlog:22: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,riverid(colorado))))
        Example tmp80lz2j83.dlog:23: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:24: query => {[1count]} | answer(A,count(B,(river(B),const(B,riverid(colorado))),A))
        Example tmp80lz2j83.dlog:25: query => {[2.62e-07count/length^2]} | answer(A,(density(B,A),smallest(C,(state(B),population(B,C)))))
        Example tmp80lz2j83.dlog:26: query => {[2.15e+10length^2]} | answer(A,(size(B,A),const(B,stateid(massachusetts))))
        Example tmp80lz2j83.dlog:27: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmp80lz2j83.dlog:28: query => {[alaska:stateid/2]} | answer(A,(state(A),largest(B,(state(A),area(A,B)))))
        Example tmp80lz2j83.dlog:29: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example tmp80lz2j83.dlog:30: query => {[345496count]} | answer(A,(size(B,A),capital(B),loc(B,C),const(C,stateid(texas))))
        Example tmp80lz2j83.dlog:31: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:32: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,place(B))))
        Example tmp80lz2j83.dlog:33: query => {[30count]} | answer(A,count(B,(city(B),const(C,stateid(texas)),loc(B,C)),A))
        Example tmp80lz2j83.dlog:34: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:35: query => {[new york:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),city(B))))
        Example tmp80lz2j83.dlog:36: query => {[oxnard_ca:cityid/3],[dayton_oh:cityid/3],[bristol township_pa:cityid/3],[duval circle_dc:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[grand island_ne:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lubbock_tx:cityid/3],[lowell_ma:cityid/3],[phoenix_az:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[idaho falls_id:cityid/3],[baton rouge_la:cityid/3],[san jose_ca:cityid/3],[salt lake city_ut:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[georgetown_dc:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[covington_ky:cityid/3],[new york_ny:cityid/3],[concord_nh:cityid/3],[san bernardino_ca:cityid/3],[portsmouth_nh:cityid/3],[warren_mi:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[louisville_ky:cityid/3],[yonkers_ny:cityid/3],[evanston_il:cityid/3],[fort worth_tx:cityid/3],[omaha_ne:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[long beach_ca:cityid/3],[biloxi_ms:cityid/3],[mobile_al:cityid/3],[pueblo_co:cityid/3],[las vegas_nv:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[modesto_ca:cityid/3],[boston_ma:cityid/3],[cleveland_oh:cityid/3],[houston_tx:cityid/3],[cheyenne_wy:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[birmingham_al:cityid/3],[norfolk_va:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[newark_nj:cityid/3],[bethlehem_pa:cityid/3],[aurora_co:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[milwaukee_wi:cityid/3],[fort lauderdale_fl:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[st. louis_mo:cityid/3],[oakland_ca:cityid/3],[worcester_ma:cityid/3],[carson_ca:cityid/3],[bennington_vt:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[indianapolis_in:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[san diego_ca:cityid/3],[beaumont_tx:cityid/3],[charlotte_nc:cityid/3],[los angeles_ca:cityid/3],[watertown_sd:cityid/3],[oceanside_ca:cityid/3],[bangor_me:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[oklahoma city_ok:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[corpus christi_tx:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[missoula_mt:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[tulsa_ok:cityid/3],[san francisco_ca:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[riverside_ca:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[minneapolis_mn:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[fresno_ca:cityid/3],[jackson_ms:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[arlington_tx:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[memphis_tn:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[rapid city_sd:cityid/3],[gainesville_fl:cityid/3],[hattiesburg_ms:cityid/3],[gary_in:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[sitka_ak:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[flint_mi:cityid/3],[anchorage_ak:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[chattanooga_tn:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[springfield_or:cityid/3],[washington_dc:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[las cruces_nm:cityid/3],[pasadena_tx:cityid/3],[little rock_ar:cityid/3],[pine bluff_ar:cityid/3],[racine_wi:cityid/3],[lexington_ky:cityid/3],[youngstown_oh:cityid/3],[tampa_fl:cityid/3],[austin_tx:cityid/3],[new orleans_la:cityid/3],[juneau_ak:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[cincinnati_oh:cityid/3],[providence_ri:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[lewiston_me:cityid/3],[kansas city_ks:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[minot_nd:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[miami_fl:cityid/3],[danbury_ct:cityid/3],[lincoln_ne:cityid/3],[mount vernon_ny:cityid/3],[rock springs_wy:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[akron_oh:cityid/3],[nashua_nh:cityid/3],[buffalo_ny:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[albuquerque_nm:cityid/3],[springfield_ma:cityid/3],[dubuque_ia:cityid/3],[auburn_me:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[tenleytown_dc:cityid/3],[ewa_hi:cityid/3],[mesa_az:cityid/3],[west allis_wi:cityid/3],[st. paul_mn:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[st. petersburg_fl:cityid/3],[tucson_az:cityid/3],[el paso_tx:cityid/3],[seattle_wa:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[sparks_nv:cityid/3],[rutland_vt:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[newark_de:cityid/3],[meridian_ms:cityid/3],[pocatello_id:cityid/3],[abilene_tx:cityid/3],[grand forks_nd:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[lewiston_id:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[columbus_ga:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[columbus_oh:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[wichita_ks:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[anaheim_ca:cityid/3],[fort wayne_in:cityid/3],[honolulu_hi:cityid/3],[aberdeen_sd:cityid/3],[atlanta_ga:cityid/3],[butte_mt:cityid/3],[jersey city_nj:cityid/3],[montgomery_al:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[grand rapids_mi:cityid/3],[jacksonville_fl:cityid/3],[dallas_tx:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[roswell_nm:cityid/3],[north platte_ne:cityid/3],[st. joseph_mo:cityid/3],[chicago_il:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[colorado springs_co:cityid/3],[denver_co:cityid/3],[lakewood_ca:cityid/3],[owensboro_ky:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[virginia beach_va:cityid/3],[baltimore_md:cityid/3],[laramie_wy:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[knoxville_tn:cityid/3],[wheeling_wv:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[santa ana_ca:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[sunrise manor_nv:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[metairie_la:cityid/3],[detroit_mi:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[philadelphia_pa:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[essex_vt:cityid/3],[portland_or:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[kansas city_mo:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[greensboro_nc:cityid/3],[tacoma_wa:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[spokane_wa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[brookside_de:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[san antonio_tx:cityid/3],[syracuse_ny:cityid/3],[tyler_tx:cityid/3],[rochester_ny:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[toledo_oh:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[pittsburgh_pa:cityid/3],[portland_me:cityid/3],[wahiawa_hi:cityid/3],[shreveport_la:cityid/3],[burlington_vt:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[huntington beach_ca:cityid/3],[saginaw_mi:cityid/3],[fairbanks_ak:cityid/3],[kenner_la:cityid/3],[parkersburg_wv:cityid/3],[canton_oh:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:37: query => {[sassafras mountain:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('south carolina')))))
        Example tmp80lz2j83.dlog:38: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))
        Example tmp80lz2j83.dlog:39: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmp80lz2j83.dlog:40: query => {[potomac:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))
        Example tmp80lz2j83.dlog:41: query => {[1count]} | answer(A,count(B,(city(B),const(B,cityid(austin,_)),loc(B,C),const(C,countryid(usa))),A))
        Example tmp80lz2j83.dlog:42: query => {[1.53e+12length^2]} | answer(A,(size(B,A),largest(B,(state(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:43: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,place(B))))
        Example tmp80lz2j83.dlog:44: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(washington))),A))
        Example tmp80lz2j83.dlog:45: query => {[66842count],[56725count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(montana))))
        Example tmp80lz2j83.dlog:46: query => {[annapolis_md:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maryland))))
        Example tmp80lz2j83.dlog:47: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:48: query => {[indianapolis_in:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(indiana))))
        Example tmp80lz2j83.dlog:49: query => {} | answer(A,(len(B,A),const(B,riverid(colorado)),river(B),loc(B,C),const(C,stateid(texas))))
        Example tmp80lz2j83.dlog:50: query => {[new york:stateid/2],[pennsylvania:stateid/2],[delaware:stateid/2],[new jersey:stateid/2]} | answer(A,(state(A),shortest(B,river(B)),traverse(B,A)))
        Example tmp80lz2j83.dlog:51: query => {[3count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(colorado)),next_to(B,D),const(D,stateid('new mexico'))),A))
        Example tmp80lz2j83.dlog:52: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:53: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:54: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmp80lz2j83.dlog:55: query => {[8count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(tennessee))),A))
        Example tmp80lz2j83.dlog:56: query => {[9.51e+12length^2]} | answer(A,sum(B,state(B),area(B),A))
        Example tmp80lz2j83.dlog:57: query => {[michigan:stateid/2]} | answer(A,(state(A),loc(B,A),city(B),const(B,cityid(flint,_))))
        Example tmp80lz2j83.dlog:58: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:59: query => {[bellevue_wa:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(washington)))))
        Example tmp80lz2j83.dlog:60: query => {[new york_ny:cityid/3]} | answer(A,largest(B,(city(A),population(A,B))))
        Example tmp80lz2j83.dlog:61: query => {[mississippi:riverid/2]} | answer(A,largest(A,(river(A),loc(A,B),const(B,stateid(illinois)))))
        Example tmp80lz2j83.dlog:62: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:63: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(dallas,_)),loc(B,A)))
        Example tmp80lz2j83.dlog:64: query => {[columbia:riverid/2],[gila:riverid/2],[snake:riverid/2],[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))
        Example tmp80lz2j83.dlog:65: query => {[6count]} | answer(A,count(B,(state(B),const(C,stateid(iowa)),next_to(C,B)),A))
        Example tmp80lz2j83.dlog:66: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(next_to(A,B),state(A),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:67: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp80lz2j83.dlog:68: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:69: query => {[alaska:stateid/2],[california:stateid/2]} | answer(A,(state(A),high_point(A,B),higher(B,C),high_point(D,C),const(D,stateid(colorado))))
        Example tmp80lz2j83.dlog:70: query => {[atlanta_ga:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(georgia)))))
        Example tmp80lz2j83.dlog:71: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('scotts valley',_))))
        Example tmp80lz2j83.dlog:72: query => {[allegheny:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid('new york')))))
        Example tmp80lz2j83.dlog:73: query => {[detroit_mi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(michigan)))))
        Example tmp80lz2j83.dlog:74: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp80lz2j83.dlog:75: query => {[washington_dc:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),smallest(B,(state(B),loc(B,C),const(C,countryid(usa)))))))
        Example tmp80lz2j83.dlog:76: query => {[mount elbert:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),most(B,C,(state(B),traverse(C,B),river(C))))))
        Example tmp80lz2j83.dlog:77: query => {[rhode island:stateid/2],[alaska:stateid/2],[hawaii:stateid/2],[maine:stateid/2]} | answer(A,(state(A),\+(loc(B,A),river(B))))
        Example tmp80lz2j83.dlog:78: query => {[492365count]} | answer(A,(population(B,A),const(B,cityid(denver,_))))
        Example tmp80lz2j83.dlog:79: query => {[85725count],[58913count],[63982count],[77685count],[87899count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(wisconsin))))
        Example tmp80lz2j83.dlog:80: query => {[451000length]} | answer(A,(len(B,A),shortest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:81: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmp80lz2j83.dlog:82: query => {[2.24e-04count/length^2]} | answer(A,(density(B,A),smallest(B,state(B))))
        Example tmp80lz2j83.dlog:83: query => {[louisiana:stateid/2]} | answer(A,largest(B,(state(A),next_to(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmp80lz2j83.dlog:84: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:85: query => {[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(state(A),loc(A,B),const(B,countryid(usa)),loc(C,A),const(C,cityid(springfield,_))))
        Example tmp80lz2j83.dlog:86: query => {[new hampshire:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(maine))))
        Example tmp80lz2j83.dlog:87: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmp80lz2j83.dlog:88: query => {[arkansas:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[republican:riverid/2],[neosho:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(kansas))))
        Example tmp80lz2j83.dlog:89: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:90: query => {[mississippi:riverid/2],[st. francis:riverid/2],[white:riverid/2],[missouri:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(missouri))))
        Example tmp80lz2j83.dlog:91: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))
        Example tmp80lz2j83.dlog:92: query => {[5count]} | answer(A,count(B,(river(B),traverse(B,C),const(C,stateid(texas))),A))
        Example tmp80lz2j83.dlog:93: query => {[61572count]} | answer(A,(population(B,A),const(B,cityid(portland,me))))
        Example tmp80lz2j83.dlog:94: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(tennessee)))))
        Example tmp80lz2j83.dlog:95: query => {[columbia_sc:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[jackson_ms:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:96: query => {[4916000count]} | answer(A,(population(B,A),const(B,stateid(missouri))))
        Example tmp80lz2j83.dlog:97: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(houston,_))))
        Example tmp80lz2j83.dlog:98: query => {[4count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa)),shortest(D,river(D)),traverse(D,B)),A))
        Example tmp80lz2j83.dlog:99: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmp80lz2j83.dlog:100: query => {[mississippi:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(mississippi)))))
        Example tmp80lz2j83.dlog:101: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(hawaii))),A))
        Example tmp80lz2j83.dlog:102: query => {[des moines_ia:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))
        Example tmp80lz2j83.dlog:103: query => {[tahoe:lakeid/2],[salton sea:lakeid/2]} | answer(A,(lake(A),loc(A,B),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:104: query => {[lansing_mi:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(michigan))))
        Example tmp80lz2j83.dlog:105: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp80lz2j83.dlog:106: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:107: query => {[utah:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(colorado))))
        Example tmp80lz2j83.dlog:108: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp80lz2j83.dlog:109: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa))))))
        Example tmp80lz2j83.dlog:110: query => {[435count]} | answer(A,count(B,(city(B),const(C,countryid(usa)),loc(B,C)),A))
        Example tmp80lz2j83.dlog:111: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),largest(C,(state(B),population(B,C)))))
        Example tmp80lz2j83.dlog:112: query => {[mississippi:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))
        Example tmp80lz2j83.dlog:113: query => {[425022count]} | answer(A,(population(B,A),const(B,cityid(atlanta,_))))
        Example tmp80lz2j83.dlog:114: query => {[10820000count]} | answer(A,sum(B,(state(B),next_to(C,B),const(C,stateid(texas))),population(B),A))
        Example tmp80lz2j83.dlog:115: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmp80lz2j83.dlog:116: query => {[7071639count]} | answer(A,(size(B,A),const(B,cityid('new york',_))))
        Example tmp80lz2j83.dlog:117: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(alaska))))
        Example tmp80lz2j83.dlog:118: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))
        Example tmp80lz2j83.dlog:119: query => {[171300count]} | answer(A,(population(B,A),const(B,cityid(spokane,wa))))
        Example tmp80lz2j83.dlog:120: query => {} | answer(A,(population(B,A),capital(B),loc(B,C),largest(C,state(C))))
        Example tmp80lz2j83.dlog:121: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:122: query => {[anchorage_ak:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmp80lz2j83.dlog:123: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmp80lz2j83.dlog:124: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example tmp80lz2j83.dlog:125: query => {[delaware river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(pennsylvania)))))
        Example tmp80lz2j83.dlog:126: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(california)))))
        Example tmp80lz2j83.dlog:127: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,_))))
        Example tmp80lz2j83.dlog:128: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp80lz2j83.dlog:129: query => {[2.71e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maryland))))
        Example tmp80lz2j83.dlog:130: query => {[overland park_ks:cityid/3],[topeka_ks:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(kansas))))
        Example tmp80lz2j83.dlog:131: query => {[columbia:riverid/2],[snake:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(oregon))))
        Example tmp80lz2j83.dlog:132: query => {[6194length]} | answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))
        Example tmp80lz2j83.dlog:133: query => {[31count]} | answer(A,count(B,(state(B),loc(C,B),major(C),river(C)),A))
        Example tmp80lz2j83.dlog:134: query => {[3.15e+11length^2]} | answer(A,(size(B,A),const(B,stateid('new mexico'))))
        Example tmp80lz2j83.dlog:135: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp80lz2j83.dlog:136: query => {[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[hudson:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[roanoke:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[potomac:riverid/2],[republican:riverid/2],[neosho:riverid/2],[san juan:riverid/2],[st. francis:riverid/2]} | answer(A,(major(A),river(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:137: query => {[iowa:stateid/2],[nevada:stateid/2],[utah:stateid/2],[south dakota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[missouri:stateid/2],[texas:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[montana:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(colorado))))
        Example tmp80lz2j83.dlog:138: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmp80lz2j83.dlog:139: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmp80lz2j83.dlog:140: query => {[west virginia:stateid/2]} | answer(A,(state(A),loc(B,A),smallest(B,capital(B))))
        Example tmp80lz2j83.dlog:141: query => {[north little rock_ar:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(arkansas)))))
        Example tmp80lz2j83.dlog:142: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(california)))))
        Example tmp80lz2j83.dlog:143: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:144: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:145: query => {[milwaukee_wi:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmp80lz2j83.dlog:146: query => {} | answer(A,(high_point(B,A),state(B),low_point(B,C),elevation(C,0.0)))
        Example tmp80lz2j83.dlog:147: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:148: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmp80lz2j83.dlog:149: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp80lz2j83.dlog:150: query => {[9.83e+12length^2]} | answer(A,(area(B,A),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:151: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:152: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),traverse(B,A)))
        Example tmp80lz2j83.dlog:153: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmp80lz2j83.dlog:154: query => {[4.09e+11length^2]} | answer(A,(area(B,A),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:155: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:156: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmp80lz2j83.dlog:157: query => {[7365000count]} | answer(A,(population(B,A),largest(C,(state(B),density(B,C)))))
        Example tmp80lz2j83.dlog:158: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))
        Example tmp80lz2j83.dlog:159: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,river(B)),traverse(B,A)))
        Example tmp80lz2j83.dlog:160: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:161: query => {[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(springfield,_))))
        Example tmp80lz2j83.dlog:162: query => {[arkansas:stateid/2],[louisiana:stateid/2],[tennessee:stateid/2],[alabama:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))
        Example tmp80lz2j83.dlog:163: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmp80lz2j83.dlog:164: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:165: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,state(A))
        Example tmp80lz2j83.dlog:166: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:167: query => {[4076000count]} | answer(A,(population(B,A),const(B,stateid(minnesota))))
        Example tmp80lz2j83.dlog:168: query => {[st. louis_mo:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(missouri)))))
        Example tmp80lz2j83.dlog:169: query => {[8count]} | answer(A,count(B,(state(B),const(C,stateid(missouri)),next_to(C,B)),A))
        Example tmp80lz2j83.dlog:170: query => {[79722count]} | answer(A,(population(B,A),const(B,cityid(kalamazoo,_))))
        Example tmp80lz2j83.dlog:171: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:172: query => {[7count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(kentucky))),A))
        Example tmp80lz2j83.dlog:173: query => {[786700count]} | answer(A,(population(B,A),const(B,stateid(montana))))
        Example tmp80lz2j83.dlog:174: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:175: query => {[1count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas)),longer(B,D),const(D,riverid(red))),A))
        Example tmp80lz2j83.dlog:176: query => {[ohio:riverid/2],[potomac:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid('west virginia'))))
        Example tmp80lz2j83.dlog:177: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,riverid(mississippi)),river(B)))
        Example tmp80lz2j83.dlog:178: query => {[5count]} | answer(A,count(B,(state(B),loc(C,B),const(C,cityid(springfield,_))),A))
        Example tmp80lz2j83.dlog:179: query => {[133116count]} | answer(A,(population(B,A),const(B,cityid(springfield,mo))))
        Example tmp80lz2j83.dlog:180: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmp80lz2j83.dlog:181: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmp80lz2j83.dlog:182: query => {[562994count]} | answer(A,(population(B,A),const(B,cityid(boston,_))))
        Example tmp80lz2j83.dlog:183: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:184: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp80lz2j83.dlog:185: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmp80lz2j83.dlog:186: query => {[browne tower:mountainid/2],[st. elias:mountainid/2],[wrangell:mountainid/2],[blackburn:mountainid/2],[kennedy:mountainid/2],[alverstone:mountainid/2],[fairweather:mountainid/2],[south buttress:mountainid/2],[bona:mountainid/2],[east buttress:mountainid/2],[foraker:mountainid/2],[hubbard:mountainid/2],[mckinley:mountainid/2],[sanford:mountainid/2],[churchill:mountainid/2],[hunter:mountainid/2],[vancouver:mountainid/2],[bear:mountainid/2]} | answer(A,(mountain(A),loc(A,B),const(B,stateid(alaska))))
        Example tmp80lz2j83.dlog:187: query => {[gila:riverid/2],[south platte:riverid/2],[washita:riverid/2],[pecos:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[cimarron:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid('new mexico'))))
        Example tmp80lz2j83.dlog:188: query => {[massachusetts:stateid/2],[maine:stateid/2],[vermont:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('new hampshire'))))
        Example tmp80lz2j83.dlog:189: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))
        Example tmp80lz2j83.dlog:190: query => {[colorado:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(nevada))))
        Example tmp80lz2j83.dlog:191: query => {[new york:stateid/2],[pennsylvania:stateid/2],[delaware:stateid/2],[new jersey:stateid/2]} | answer(A,(state(A),loc(B,A),shortest(B,river(B))))
        Example tmp80lz2j83.dlog:192: query => {[tombigbee:riverid/2],[chattahoochee:riverid/2],[cumberland:riverid/2],[tennessee:riverid/2],[mississippi:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),const(C,stateid(alabama)),next_to(C,B)))
        Example tmp80lz2j83.dlog:193: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmp80lz2j83.dlog:194: query => {[montpelier_vt:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))
        Example tmp80lz2j83.dlog:195: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:196: query => {[casper_wy:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(wyoming))))
        Example tmp80lz2j83.dlog:197: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:198: query => {[tombigbee:riverid/2],[chattahoochee:riverid/2],[roanoke:riverid/2],[wateree catawba:riverid/2],[cumberland:riverid/2],[tennessee:riverid/2],[mississippi:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(atlanta,_))))
        Example tmp80lz2j83.dlog:199: query => {[2633000count]} | answer(A,(population(B,A),const(B,stateid(oregon))))
        Example tmp80lz2j83.dlog:200: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san jose',_))))
        Example tmp80lz2j83.dlog:201: query => {} | answer(A,(river(A),traverse(A,B),const(B,stateid(maine))))
        Example tmp80lz2j83.dlog:202: query => {[5count]} | answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))
        Example tmp80lz2j83.dlog:203: query => {[delaware:riverid/2]} | answer(A,shortest(A,river(A)))
        Example tmp80lz2j83.dlog:204: query => {[43count]} | answer(A,count(B,(river(B),\+(traverse(B,C),state(C),loc(D,C),capital(D),const(D,cityid(albany,_)))),A))
        Example tmp80lz2j83.dlog:205: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))
        Example tmp80lz2j83.dlog:206: query => {[pacific ocean:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))
        Example tmp80lz2j83.dlog:207: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,dc))))
        Example tmp80lz2j83.dlog:208: query => {[wilmington_de:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(delaware))))
        Example tmp80lz2j83.dlog:209: query => {[ohio:stateid/2]} | answer(A,(state(A),const(B,cityid(columbus,_)),capital(B),loc(B,A)))
        Example tmp80lz2j83.dlog:210: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(capital(A),population(A,B))))
        Example tmp80lz2j83.dlog:211: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(state(C),capital(C,A),population(A,B))))
        Example tmp80lz2j83.dlog:212: query => {[270230count]} | answer(A,(population(B,A),capital(B),loc(B,C),largest(C,(state(C),const(D,riverid(mississippi)),traverse(D,C)))))
        Example tmp80lz2j83.dlog:213: query => {[3.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid('new mexico'))))
        Example tmp80lz2j83.dlog:214: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,state(A))
        Example tmp80lz2j83.dlog:215: query => {[51count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmp80lz2j83.dlog:216: query => {[10count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,riverid(mississippi)),river(C)),A))
        Example tmp80lz2j83.dlog:217: query => {[potomac:riverid/2],[roanoke:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(virginia))))
        Example tmp80lz2j83.dlog:218: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:219: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:220: query => {[alaska:stateid/2]} | answer(A,highest(B,(state(A),loc(B,A),place(B))))
        Example tmp80lz2j83.dlog:221: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmp80lz2j83.dlog:222: query => {[massachusetts:stateid/2],[connecticut:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('rhode island'))))
        Example tmp80lz2j83.dlog:223: query => {[lake michigan:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(wisconsin)))))
        Example tmp80lz2j83.dlog:224: query => {[1.78e+11length^2]} | answer(A,(size(B,A),const(B,stateid(florida))))
        Example tmp80lz2j83.dlog:225: query => {[richmond_va:cityid/3],[norfolk_va:cityid/3],[alexandria_va:cityid/3],[portsmouth_va:cityid/3],[newport news_va:cityid/3],[lynchburg_va:cityid/3],[hampton_va:cityid/3],[virginia beach_va:cityid/3],[chesapeake_va:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))
        Example tmp80lz2j83.dlog:226: query => {[arkansas river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmp80lz2j83.dlog:227: query => {[oregon:stateid/2]} | answer(A,(state(A),loc(B,A),capital(B),const(B,cityid(salem,_))))
        Example tmp80lz2j83.dlog:228: query => {[new mexico:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:229: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande')),river(B)))
        Example tmp80lz2j83.dlog:230: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),smallest(C,(state(B),population(B,C))))))
        Example tmp80lz2j83.dlog:231: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmp80lz2j83.dlog:232: query => {[2718000count]} | answer(A,(population(B,A),const(B,stateid(arizona))))
        Example tmp80lz2j83.dlog:233: query => {} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmp80lz2j83.dlog:234: query => {} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:235: query => {[georgia:stateid/2],[tennessee:stateid/2],[florida:stateid/2],[mississippi:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(alabama))))
        Example tmp80lz2j83.dlog:236: query => {[2count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(oregon))),A))
        Example tmp80lz2j83.dlog:237: query => {[louisiana:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:238: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:239: query => {[colorado:stateid/2]} | answer(A,(state(A),city(B),const(B,cityid(denver,_)),loc(B,A)))
        Example tmp80lz2j83.dlog:240: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmp80lz2j83.dlog:241: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmp80lz2j83.dlog:242: query => {[1.27e+11length^2]} | answer(A,(area(B,A),state(B),loc(C,B),capital(C),const(C,cityid(albany,_))))
        Example tmp80lz2j83.dlog:243: query => {[gila:riverid/2],[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(arizona))))
        Example tmp80lz2j83.dlog:244: query => {[920600count]} | answer(A,(population(B,A),const(B,stateid('new hampshire'))))
        Example tmp80lz2j83.dlog:245: query => {[mississippi:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmp80lz2j83.dlog:246: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:247: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:248: query => {[5count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmp80lz2j83.dlog:249: query => {[phoenix_az:cityid/3]} | answer(A,largest(B,(population(A,B),capital(A),loc(A,C),const(C,countryid(usa)))))
        Example tmp80lz2j83.dlog:250: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,capital(A)))
        Example tmp80lz2j83.dlog:251: query => {[493846count]} | answer(A,(population(B,A),const(B,cityid(seattle,wa))))
        Example tmp80lz2j83.dlog:252: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmp80lz2j83.dlog:253: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),largest(C,state(C))))))
        Example tmp80lz2j83.dlog:254: query => {[3005172count]} | answer(A,(population(B,A),const(B,cityid(chicago,_))))
        Example tmp80lz2j83.dlog:255: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp80lz2j83.dlog:256: query => {[wichita_ks:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmp80lz2j83.dlog:257: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:258: query => {[rock:riverid/2]} | answer(A,(major(A),river(A),traverse(A,B),const(B,stateid(illinois))))
        Example tmp80lz2j83.dlog:259: query => {[minnesota:stateid/2],[new york:stateid/2]} | answer(A,(loc(B,A),state(A),const(B,cityid(rochester,_))))
        Example tmp80lz2j83.dlog:260: query => {[4count]} | answer(A,count(B,(city(B),loc(B,C),const(C,stateid(montana))),A))
        Example tmp80lz2j83.dlog:261: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example tmp80lz2j83.dlog:262: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmp80lz2j83.dlog:263: query => {[birmingham_al:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(alabama)))))
        Example tmp80lz2j83.dlog:264: query => {[delaware:riverid/2]} | answer(A,shortest(A,river(A)))
        Example tmp80lz2j83.dlog:265: query => {[iowa:stateid/2],[minnesota:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('south dakota'))))
        Example tmp80lz2j83.dlog:266: query => {[augusta_me:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(maine))))
        Example tmp80lz2j83.dlog:267: query => {} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),largest(C,state(C)))))
        Example tmp80lz2j83.dlog:268: query => {} | answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))
        Example tmp80lz2j83.dlog:269: query => {[2.15e+11length^2]} | answer(A,(area(B,A),const(B,stateid(idaho))))
        Example tmp80lz2j83.dlog:270: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp80lz2j83.dlog:271: query => {[st. clair:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(michigan))))
        Example tmp80lz2j83.dlog:272: query => {[new york:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),major(B),river(B),traverse(B,A))))
        Example tmp80lz2j83.dlog:273: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:274: query => {[great falls_mt:cityid/3],[billings_mt:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(montana))))
        Example tmp80lz2j83.dlog:275: query => {[illinois:stateid/2]} | answer(A,largest(B,(state(A),const(C,riverid(mississippi)),traverse(C,A),population(A,B))))
        Example tmp80lz2j83.dlog:276: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:277: query => {[new orleans_la:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example tmp80lz2j83.dlog:278: query => {[800500count]} | answer(A,(population(B,A),const(B,stateid(nevada))))
        Example tmp80lz2j83.dlog:279: query => {[1.81e+11length^2],[1.06e+11length^2],[1.38e+11length^2],[1.76e+11length^2],[2.20e+11length^2],[1.07e+11length^2],[2.85e+09length^2],[2.00e+11length^2],[2.15e+10length^2],[9.38e+10length^2],[1.53e+12length^2],[2.51e+11length^2],[2.71e+10length^2],[5.29e+09length^2],[8.06e+10length^2],[2.02e+10length^2],[1.34e+11length^2],[1.68e+10length^2],[2.15e+11length^2],[1.78e+11length^2],[2.49e+10length^2],[1.83e+11length^2],[1.24e+11length^2],[1.17e+11length^2],[6.91e+11length^2],[6.27e+10length^2],[1.53e+11length^2],[1.46e+11length^2],[2.95e+11length^2],[3.81e+11length^2],[1.52e+11length^2],[3.15e+11length^2],[2.40e+10length^2],[1.09e+11length^2],[2.19e+11length^2],[1.30e+10length^2],[1.45e+11length^2],[3.14e+09length^2],[2.53e+11length^2],[8.62e+10length^2],[2.86e+11length^2],[2.13e+11length^2],[1.27e+11length^2],[4.09e+11length^2],[1.36e+11length^2],[2.69e+11length^2]} | answer(A,(area(B,A),state(B)))
        Example tmp80lz2j83.dlog:280: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)))
        Example tmp80lz2j83.dlog:281: query => {[virginia:stateid/2],[indiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))
        Example tmp80lz2j83.dlog:282: query => {[11400000count]} | answer(A,(population(B,A),const(B,stateid(illinois))))
        Example tmp80lz2j83.dlog:283: query => {[8count]} | answer(A,count(B,(city(B),loc(B,C),const(C,stateid(louisiana))),A))
        Example tmp80lz2j83.dlog:284: query => {[montana:stateid/2]} | answer(A,(state(A),largest(B,(city(B),loc(B,C),const(C,stateid(montana)))),loc(B,A)))
        Example tmp80lz2j83.dlog:285: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example tmp80lz2j83.dlog:286: query => {[10count]} | answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B)),A))
        Example tmp80lz2j83.dlog:287: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp80lz2j83.dlog:288: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:289: query => {} | answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))
        Example tmp80lz2j83.dlog:290: query => {[10count]} | answer(A,count(B,(state(B),const(C,riverid(mississippi)),traverse(C,B)),A))
        Example tmp80lz2j83.dlog:291: query => {[lakewood_co:cityid/3],[pueblo_co:cityid/3],[arvada_co:cityid/3],[boulder_co:cityid/3],[fort collins_co:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(colorado))))
        Example tmp80lz2j83.dlog:292: query => {[944000count]} | answer(A,(population(B,A),const(B,stateid(idaho))))
        Example tmp80lz2j83.dlog:293: query => {[pennsylvania:stateid/2]} | answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))
        Example tmp80lz2j83.dlog:294: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),largest(C,state(C))),A))
        Example tmp80lz2j83.dlog:295: query => {[1.53e+12length^2]} | answer(A,(size(B,A),const(B,stateid(alaska))))
        Example tmp80lz2j83.dlog:296: query => {[gannett peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmp80lz2j83.dlog:297: query => {[michigan:stateid/2]} | answer(A,(state(A),const(B,cityid(kalamazoo,_)),loc(B,A)))
        Example tmp80lz2j83.dlog:298: query => {[11count]} | answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(utah))),A))
        Example tmp80lz2j83.dlog:299: query => {[minnesota:stateid/2]} | answer(A,largest(A,(state(A),traverse(B,A),const(B,riverid(mississippi)))))
        Example tmp80lz2j83.dlog:300: query => {[1count]} | answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(austin,_))),A))
        Example tmp80lz2j83.dlog:301: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp80lz2j83.dlog:302: query => {[10count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(florida))),A))
        Example tmp80lz2j83.dlog:303: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),largest(C,(state(B),population(B,C))))))
        Example tmp80lz2j83.dlog:304: query => {[1.53e+12length^2]} | answer(A,(area(B,A),largest(B,state(B))))
        Example tmp80lz2j83.dlog:305: query => {[california:stateid/2]} | answer(A,(state(A),loc(B,A),lowest(B,place(B))))
        Example tmp80lz2j83.dlog:306: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmp80lz2j83.dlog:307: query => {[california:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),city(B))))
        Example tmp80lz2j83.dlog:308: query => {[texas:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(oklahoma)))))
        Example tmp80lz2j83.dlog:309: query => {[4count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))
        Example tmp80lz2j83.dlog:310: query => {[0count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(alaska))),A))
        Example tmp80lz2j83.dlog:311: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmp80lz2j83.dlog:312: query => {[135length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(delaware))))))
        Example tmp80lz2j83.dlog:313: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp80lz2j83.dlog:314: query => {[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[dover_de:cityid/3],[pierre_sd:cityid/3]} | answer(A,(capital(A),\+(major(A),city(A))))
        Example tmp80lz2j83.dlog:315: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))
        Example tmp80lz2j83.dlog:316: query => {[174431count]} | answer(A,(size(B,A),largest(B,(city(B),loc(B,C),const(C,stateid(alaska))))))
        Example tmp80lz2j83.dlog:317: query => {[425022count]} | answer(A,(population(B,A),capital(B),loc(B,C),const(C,stateid(georgia))))
        Example tmp80lz2j83.dlog:318: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp80lz2j83.dlog:319: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,tx))))
        Example tmp80lz2j83.dlog:320: query => {[pacific ocean:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmp80lz2j83.dlog:321: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:322: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),state(B))))
        Example tmp80lz2j83.dlog:323: query => {[177857count]} | answer(A,(population(B,A),const(B,cityid(montgomery,_))))
        Example tmp80lz2j83.dlog:324: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:325: query => {[clingmans dome:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi)))))
        Example tmp80lz2j83.dlog:326: query => {} | answer(A,(state(A),loc(B,A),major(B),city(B),const(B,cityid(austin,_))))
        Example tmp80lz2j83.dlog:327: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),\+(traverse(A,B),const(B,stateid(texas))))))
        Example tmp80lz2j83.dlog:328: query => {[massachusetts:stateid/2]} | answer(A,(state(A),const(B,cityid(boston,_)),loc(B,A)))
        Example tmp80lz2j83.dlog:329: query => {[new orleans:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))
        Example tmp80lz2j83.dlog:330: query => {[concord_nh:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid('new hampshire'))))
        Example tmp80lz2j83.dlog:331: query => {[638333count]} | answer(A,(population(B,A),const(B,cityid(washington,dc))))
        Example tmp80lz2j83.dlog:332: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),const(B,riverid(colorado)),river(B),traverse(B,A)))
        Example tmp80lz2j83.dlog:333: query => {[mount hood:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),const(B,stateid(oregon)))))
        Example tmp80lz2j83.dlog:334: query => {[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[wyoming:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[washington:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),const(E,stateid(texas))))
        Example tmp80lz2j83.dlog:335: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san diego',_))))
        Example tmp80lz2j83.dlog:336: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(idaho))),A))
        Example tmp80lz2j83.dlog:337: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),highest(C,(state(B),loc(C,B),place(C)))))
        Example tmp80lz2j83.dlog:338: query => {} | answer(A,(elevation(B,A),highest(B,(mountain(B),loc(B,C),const(C,stateid(texas))))))
        Example tmp80lz2j83.dlog:339: query => {[1.83e+11length^2]} | answer(A,(size(B,A),const(B,stateid('north dakota'))))
        Example tmp80lz2j83.dlog:340: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp80lz2j83.dlog:341: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[becharof:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:342: query => {[arizona:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),state(B),loc(C,B),lowest(C,(place(C),loc(C,D),const(D,countryid(usa)))))))
        Example tmp80lz2j83.dlog:343: query => {[olympia_wa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(washington))))
        Example tmp80lz2j83.dlog:344: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmp80lz2j83.dlog:345: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(arizona)))))
        Example tmp80lz2j83.dlog:346: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),largest(C,(state(B),area(B,C))))))
        Example tmp80lz2j83.dlog:347: query => {[alaska:stateid/2]} | answer(A,largest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:348: query => {[49count]} | answer(A,count(B,(state(B),next_to(B,C),state(C)),A))
        Example tmp80lz2j83.dlog:349: query => {[west virginia:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(ohio)))))
        Example tmp80lz2j83.dlog:350: query => {[105length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(florida))))))
        Example tmp80lz2j83.dlog:351: query => {[mount elbert:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example tmp80lz2j83.dlog:352: query => {[walton county:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(florida)))))
        Example tmp80lz2j83.dlog:353: query => {[3.46e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid('south dakota'))))
        Example tmp80lz2j83.dlog:354: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:355: query => {[5count]} | answer(A,count(B,(state(B),loc(C,B),city(C),const(C,cityid(springfield,_))),A))
        Example tmp80lz2j83.dlog:356: query => {[mount sunflower:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(kansas)))))
        Example tmp80lz2j83.dlog:357: query => {[6count]} | answer(A,count(B,(state(B),const(C,riverid(missouri)),river(C),traverse(C,B)),A))
        Example tmp80lz2j83.dlog:358: query => {[omaha_ne:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(nebraska)))))
        Example tmp80lz2j83.dlog:359: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:360: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),state(B),loc(C,B),capital(C),const(C,cityid(austin,_))))
        Example tmp80lz2j83.dlog:361: query => {[ocheyedan mound:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),capital(C),const(C,cityid('des moines',_)))))
        Example tmp80lz2j83.dlog:362: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid('new mexico')))))
        Example tmp80lz2j83.dlog:363: query => {[2.85e+09length^2]} | answer(A,(area(B,A),smallest(B,state(B))))
        Example tmp80lz2j83.dlog:364: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:365: query => {[usa:countryid/2]} | answer(A,(loc(B,A),const(B,stateid('new hampshire'))))
        Example tmp80lz2j83.dlog:366: query => {[3968000length]} | answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:367: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,capital(A)))
        Example tmp80lz2j83.dlog:368: query => {[portland_or:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(oregon)))))
        Example tmp80lz2j83.dlog:369: query => {[delaware:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:370: query => {[louisiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('baton rouge',_))))
        Example tmp80lz2j83.dlog:371: query => {[2.24e-04count/length^2]} | answer(A,(density(B,A),smallest(C,(state(B),area(B,C)))))
        Example tmp80lz2j83.dlog:372: query => {[1303000count]} | answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,stateid(texas))))))
        Example tmp80lz2j83.dlog:373: query => {[usa:countryid/2],[massachusetts:stateid/2],[oregon:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[ohio:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(springfield,_))))
        Example tmp80lz2j83.dlog:374: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example tmp80lz2j83.dlog:375: query => {[3.13e-05count/length^2]} | answer(A,(density(B,A),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:376: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmp80lz2j83.dlog:377: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmp80lz2j83.dlog:378: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(B,(city(A),population(A,B))))
        Example tmp80lz2j83.dlog:379: query => {[14count]} | answer(A,count(B,(state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D)))),A))
        Example tmp80lz2j83.dlog:380: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:381: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmp80lz2j83.dlog:382: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:383: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('new mexico'))))
        Example tmp80lz2j83.dlog:384: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:385: query => {[new york:stateid/2]} | answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))
        Example tmp80lz2j83.dlog:386: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),largest(B,state(B))))
        Example tmp80lz2j83.dlog:387: query => {[washington_dc:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),smallest(B,state(B)))))
        Example tmp80lz2j83.dlog:388: query => {[1count]} | answer(A,count(B,(river(B),loc(B,C),largest(D,(state(C),population(C,D)))),A))
        Example tmp80lz2j83.dlog:389: query => {[4113200count]} | answer(A,(population(B,A),const(B,stateid(washington))))
        Example tmp80lz2j83.dlog:390: query => {[51count]} | answer(A,count(B,(state(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmp80lz2j83.dlog:391: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[michigan:lakeid/2],[becharof:lakeid/2],[erie:lakeid/2],[ontario:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[great salt lake:lakeid/2],[superior:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[huron:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:392: query => {[phoenix_az:cityid/3]} | answer(A,largest(A,(capital(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:393: query => {[district of columbia:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B))))
        Example tmp80lz2j83.dlog:394: query => {[indiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('fort wayne',_))))
        Example tmp80lz2j83.dlog:395: query => {[mississippi river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(iowa)))))
        Example tmp80lz2j83.dlog:396: query => {[alabama:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(georgia))))
        Example tmp80lz2j83.dlog:397: query => {[3968000length]} | answer(A,(len(B,A),const(B,riverid(missouri)),river(B)))
        Example tmp80lz2j83.dlog:398: query => {[21count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmp80lz2j83.dlog:399: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:400: query => {[24count]} | answer(A,count(B,(river(B),traverse(B,C),state(C),next_to(C,D),const(D,stateid(colorado))),A))
        Example tmp80lz2j83.dlog:401: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(texas)))))
        Example tmp80lz2j83.dlog:402: query => {[iowa:stateid/2],[kentucky:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(missouri))))
        Example tmp80lz2j83.dlog:403: query => {[colorado:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,cityid(austin,tx))))
        Example tmp80lz2j83.dlog:404: query => {[san juan:riverid/2],[colorado:riverid/2],[green:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(utah))))
        Example tmp80lz2j83.dlog:405: query => {[houston_tx:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(texas)),population(A,B))))
        Example tmp80lz2j83.dlog:406: query => {[koolaupoko_hi:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(hawaii)))))
        Example tmp80lz2j83.dlog:407: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B),loc(A,C),const(C,countryid(usa)))))
        Example tmp80lz2j83.dlog:408: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:409: query => {[new orleans:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(louisiana)))))
        Example tmp80lz2j83.dlog:410: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:411: query => {[8.62e+10length^2]} | answer(A,(area(B,A),const(B,stateid(maine))))
        Example tmp80lz2j83.dlog:412: query => {[678974count]} | answer(A,(population(B,A),const(B,cityid('san francisco',_))))
        Example tmp80lz2j83.dlog:413: query => {[district of columbia:stateid/2]} | answer(A,smallest(A,(state(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:414: query => {[naknek:lakeid/2],[salton sea:lakeid/2],[okeechobee:lakeid/2],[red:lakeid/2],[teshekpuk:lakeid/2],[flathead:lakeid/2],[tahoe:lakeid/2],[becharof:lakeid/2],[lake of the woods:lakeid/2],[iliamna:lakeid/2],[winnebago:lakeid/2],[rainy:lakeid/2],[pontchartrain:lakeid/2],[champlain:lakeid/2],[st. clair:lakeid/2],[mille lacs:lakeid/2]} | answer(A,(major(A),lake(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:415: query => {[casper_wy:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(wyoming)))))
        Example tmp80lz2j83.dlog:416: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmp80lz2j83.dlog:417: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example tmp80lz2j83.dlog:418: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))
        Example tmp80lz2j83.dlog:419: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[new mexico:stateid/2],[california:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))
        Example tmp80lz2j83.dlog:420: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:421: query => {} | answer(A,(river(A),traverse(A,B),largest(B,state(B))))
        Example tmp80lz2j83.dlog:422: query => {[1.53e+12length^2]} | answer(A,(area(B,A),smallest(C,(state(B),density(B,C)))))
        Example tmp80lz2j83.dlog:423: query => {[0count]} | answer(A,count(B,(major(B),river(B),traverse(B,C),const(C,stateid(ohio))),A))
        Example tmp80lz2j83.dlog:424: query => {[1.53e+12length^2]} | answer(A,(area(B,A),const(B,stateid(alaska))))
        Example tmp80lz2j83.dlog:425: query => {[ouachita:riverid/2],[mississippi:riverid/2],[red:riverid/2],[pearl:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(louisiana))))
        Example tmp80lz2j83.dlog:426: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmp80lz2j83.dlog:427: query => {[bristol township_pa:cityid/3],[bethlehem_pa:cityid/3],[scranton_pa:cityid/3],[penn hills_pa:cityid/3],[reading_pa:cityid/3],[altoona_pa:cityid/3],[abingdon_pa:cityid/3],[erie_pa:cityid/3],[philadelphia_pa:cityid/3],[allentown_pa:cityid/3],[upper darby_pa:cityid/3],[lower merion_pa:cityid/3],[pittsburgh_pa:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmp80lz2j83.dlog:428: query => {[-85length]} | answer(A,(elevation(B,A),const(B,placeid('death valley'))))
        Example tmp80lz2j83.dlog:429: query => {[wabash:riverid/2],[ohio:riverid/2],[mississippi:riverid/2],[rock:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(illinois))))
        Example tmp80lz2j83.dlog:430: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp80lz2j83.dlog:431: query => {[2667length]} | answer(A,(elevation(B,A),const(B,placeid('guadalupe peak'))))
        Example tmp80lz2j83.dlog:432: query => {[2364000count]} | answer(A,(population(B,A),const(B,stateid(kansas))))
        Example tmp80lz2j83.dlog:433: query => {} | answer(A,(state(A),loc(B,A),capital(B),high_point(A,B)))
        Example tmp80lz2j83.dlog:434: query => {[11count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(pennsylvania))),A))
        Example tmp80lz2j83.dlog:435: query => {[17558000count]} | answer(A,(population(B,A),const(B,stateid('new york'))))
        Example tmp80lz2j83.dlog:436: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),state(B),next_to(B,C),most(C,D,(state(C),next_to(C,D),state(D))))))
        Example tmp80lz2j83.dlog:437: query => {[0count]} | answer(A,count(B,(river(B),const(C,stateid(alaska)),loc(B,C)),A))
        Example tmp80lz2j83.dlog:438: query => {[dakota:riverid/2],[wabash:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[ohio:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[columbia:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),\+(traverse(A,B),const(B,stateid(tennessee)))))
        Example tmp80lz2j83.dlog:439: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp80lz2j83.dlog:440: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),traverse(B,A),largest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:441: query => {[1125000count]} | answer(A,(population(B,A),const(B,stateid(maine))))
        Example tmp80lz2j83.dlog:442: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:443: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example tmp80lz2j83.dlog:444: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example tmp80lz2j83.dlog:445: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmp80lz2j83.dlog:446: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmp80lz2j83.dlog:447: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,longest(B,(state(A),loc(B,A),river(B))))
        Example tmp80lz2j83.dlog:448: query => {[fayetteville_nc:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[high point_nc:cityid/3],[durham_nc:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('north carolina'))))
        Example tmp80lz2j83.dlog:449: query => {[alaska:stateid/2]} | answer(A,(loc(B,A),state(A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp80lz2j83.dlog:450: query => {[1.85e-06count/length^2]} | answer(A,(density(B,A),const(B,stateid(wyoming))))
        Example tmp80lz2j83.dlog:451: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:452: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example tmp80lz2j83.dlog:453: query => {[michigan:stateid/2],[minnesota:stateid/2],[iowa:stateid/2],[illinois:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(wisconsin))))
        Example tmp80lz2j83.dlog:454: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(colorado))))
        Example tmp80lz2j83.dlog:455: query => {[3894000count]} | answer(A,(population(B,A),const(B,stateid(alabama))))
        Example tmp80lz2j83.dlog:456: query => {} | answer(A,(major(A),city(A),loc(A,B),largest(B,state(B))))
        Example tmp80lz2j83.dlog:457: query => {[harrisburg_pa:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmp80lz2j83.dlog:458: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[illinois:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))
        Example tmp80lz2j83.dlog:459: query => {[campbell hill:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(ohio)))))
        Example tmp80lz2j83.dlog:460: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmp80lz2j83.dlog:461: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:462: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),river(B),traverse(B,A)))
        Example tmp80lz2j83.dlog:463: query => {[california:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),loc(A,C),const(C,countryid(usa)))))
        Example tmp80lz2j83.dlog:464: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp80lz2j83.dlog:465: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp80lz2j83.dlog:466: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp80lz2j83.dlog:467: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[san jose_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[long beach_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[oakland_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[san diego_ca:cityid/3],[los angeles_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[san francisco_ca:cityid/3],[riverside_ca:cityid/3],[fresno_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[anaheim_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[santa ana_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3],[huntington beach_ca:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(california))))
        Example tmp80lz2j83.dlog:468: query => {[pawtucket_ri:cityid/3],[warwick_ri:cityid/3],[cranston_ri:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid('rhode island'))))
        Example tmp80lz2j83.dlog:469: query => {[5count]} | answer(A,count(B,(state(B),next_to(B,C),state(C),loc(D,C),capital(D),const(D,cityid(boston,_))),A))
        Example tmp80lz2j83.dlog:470: query => {[3.13e-05count/length^2]} | answer(A,(density(B,A),const(B,countryid(usa))))
        Example tmp80lz2j83.dlog:471: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp80lz2j83.dlog:472: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp80lz2j83.dlog:473: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp80lz2j83.dlog:474: query => {[arkansas:riverid/2],[white:riverid/2],[mississippi:riverid/2],[red:riverid/2],[ouachita:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(arkansas))))
        Example tmp80lz2j83.dlog:475: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(alaska))))
        Example tmp80lz2j83.dlog:476: query => {[690767count]} | answer(A,(population(B,A),const(B,stateid('south dakota'))))
        Example tmp80lz2j83.dlog:477: query => {[3count]} | answer(A,count(B,(major(B),city(B),loc(B,C),const(C,stateid(arizona))),A))
        Example tmp80lz2j83.dlog:478: query => {[jefferson city_mo:cityid/3],[nashville_tn:cityid/3]} | answer(A,(capital(A),loc(A,B),most(B,C,(state(B),next_to(B,C),state(C)))))
        Example tmp80lz2j83.dlog:479: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,placeid('mount whitney'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
      } [2.5s, cum. 4.2s]
    } [4.2s, cum. 4.2s]
    Randomly splitting 480 general examples
    336 training examples, 144 test examples
  } [4.2s, cum. 4.3s]
  Execution directory: /Users/niyixuan/PycharmProjects/CS388_NLP/project_2_1/state/execs/11.exec
} [4.3s]
